language:          cpp
dist:              trusty
git:
  submodules:      true
env:
  global:
    # Misc
    #- RUN_TESTS=true
    #- COVERAGE=false

#
# Build Dependencies
#
before_script:
  # Test the workflow as per the README.md
  #
  # git clone https://github.com/weidai11/cryptopp.git
  # cd cryptopp
  # git submodule add https://github.com/noloader/cryptopp-cmake.git cmake
  # git submodule update --remote
  #
  # cp "$PWD/cmake/cryptopp-config.cmake" "$PWD"
  # cp "$PWD/cmake/CMakeLists.txt" "$PWD"
  - |
    git clone https://github.com/weidai11/cryptopp.git
    cd cryptopp
    git submodule add https://github.com/noloader/cryptopp-cmake.git cmake
    git submodule update --remote
    cp cmake/cryptopp-config.cmake .
    cp cmake/CMakeLists.txt .

  #
  # Build Folder
  #
  - mkdir _build
  - cd _build

matrix:
  include:

  #
  # G++ default from Ubuntu Trusty
  #
  - os: linux
    env:
      - TEST="G++ Default Ubuntu Trusty"
    script:
      - cmake -DCMAKE_C_COMPILER="gcc" -DCMAKE_CXX_COMPILER="g++" ..
      - make
      - ctest --output-on-failure

  #
  # Clang default from Ubuntu Trusty
  #
  - os: linux
    env:
      - TEST="Clang Default Ubuntu Trusty"
    script:
      - cmake -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ ..
      - make
      - ctest --output-on-failure

  #
  # G++ with latest cmake
  #
  - os: linux
    env:
      - TEST="G++ Default, cmake latest"

    before_script:
      # Test the workflow as per the README.md
      #
      # git clone https://github.com/weidai11/cryptopp.git
      # cd cryptopp
      # git submodule add https://github.com/noloader/cryptopp-cmake.git cmake
      # git submodule update --remote
      #
      # cp "$PWD/cmake/cryptopp-config.cmake" "$PWD"
      # cp "$PWD/cmake/CMakeLists.txt" "$PWD"
      - |
        git clone https://github.com/weidai11/cryptopp.git
        cd cryptopp
        git submodule add https://github.com/noloader/cryptopp-cmake.git cmake
        git submodule update --remote
        cp cmake/cryptopp-config.cmake .
        cp cmake/CMakeLists.txt .

      #
      # Update / Install CMake
      #
      - |
        if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
          mkdir -p external/cmake
          pushd external/cmake
          wget https://cmake.org/files/v3.11/cmake-3.11.4-Linux-x86_64.sh
          chmod +x cmake-*-Linux-x86_64.sh
          ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
          export PATH="${PWD}/bin:$PATH"
          popd
        else
          brew update
          brew outdated cmake || brew upgrade cmake
        fi

      #
      # Build Folder
      #
      - mkdir _build
      - cd _build

    script:
      - cmake -DCMAKE_C_COMPILER="gcc" -DCMAKE_CXX_COMPILER="g++" ..
      - make
      - ctest --output-on-failure
